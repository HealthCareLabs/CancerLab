{"version":3,"sources":["reqHandler.js"],"names":[],"mappings":";;;;;AAGA,IAAI,OAAO,QAAQ,GAAR,KAAgB,QAA3B;AACA,IAAI,MAAM,QAAQ,OAAO,KAAf,EAAsB,MAAtB,CAAV;AACA,IAAI,UAAU,QAAQ,OAAO,eAAf,EAAgC,OAA9C;;AAEA,SAAS,kBAAT,CAA4B,GAA5B,EAAiC;AAC7B,QAAI,CAAC,IAAI,GAAJ,CAAQ,WAAR,CAAL,EAA2B;AACvB,eAAO,KAAP;AACH;AACD,QAAI,QAAQ,IAAI,GAAJ,CAAQ,WAAR,CAAZ;;AAEA,YAAQ,OAAR,CAAgB,EAAC,QAAQ,KAAT,EAAhB,EAAiC,UAAU,GAAV,EAAe,OAAf,EAAwB;AACrD,YAAI,GAAJ,EAAS,OAAO,KAAP;AACT,YAAI,CAAC,OAAL,EAAc,OAAO,KAAP;AACd,YAAI,CAAC,QAAQ,WAAR,CAAoB,KAApB,CAAL,EAAiC,OAAO,KAAP;AACjC,YAAI,YAAJ,GAAmB,QAAnB;AACA,YAAI,IAAJ,GAAW,OAAX;;AAEA,eAAO,IAAP;AACH,KARD;AASH;;AAGD,IAAI,aAAa,SAAb,UAAa,CAAU,WAAV,EAAuB,UAAvB,EAAmC;AAChD,WAAO,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC7B,YAAI,CAAC,UAAD,IAAe,WAAnB,EAAgC;AAC5B,gBAAI,mBAAmB,GAAnB,CAAJ,EAA6B;AACzB,oBAAI,YAAJ,GAAmB,QAAnB;AACA;AACH;AACJ;;AAED,YAAI,CAAC,WAAL,EAAkB;AACd,gBAAI,IAAI,eAAJ,EAAJ,EACI;AACP;;AAED,YAAI,eAAe,UAAnB,EAA+B;AAC3B,gBAAI,CAAC,IAAI,eAAJ,EAAL,EAA4B;AACxB,oBAAI,SAAS,mBAAmB,GAAnB,CAAb;AACA,wBAAQ,GAAR,CAAY,MAAZ;AACA,oBAAI,mBAAmB,GAAnB,CAAJ,EAA6B;AACzB,wBAAI,YAAJ,GAAmB,QAAnB;AACA,4BAAQ,GAAR,CAAY,cAAZ;AACA;AACH,iBAJD,MAIO;AACH,4BAAQ,GAAR,CAAY,kBAAZ;AACA,2BAAO,IAAI,IAAJ,CAAS,EAAC,OAAO,cAAR,EAAT,CAAP;AACH;AACJ,aAXD,MAWO;AACH;AACH;AACJ;AACJ,KA7BD;AA8BH,CA/BD;;AAiCA,OAAO,OAAP,CAAe,UAAf,GAA4B,UAA5B","file":"reqHandler-compiled.js","sourcesContent":["/**\r\n * Created by AsTex on 27.06.2016.\r\n */\r\nvar libs = process.cwd() + '/libs/';\r\nvar log = require(libs + 'log')(module);\r\nvar Patient = require(libs + 'model/patient').Patient;\r\n\r\nfunction isApiAuthenticated(req) {\r\n    if (!req.get('X-API-KEY')) {\r\n        return false;\r\n    }\r\n    var token = req.get('X-API-KEY');\r\n\r\n    Patient.findOne({apiKey: token}, function (err, patient) {\r\n        if (err) return false;\r\n        if (!patient) return false;\r\n        if (!patient.checkApiKey(token)) return false;\r\n        req.authStrategy = 'Header';\r\n        req.user = patient;\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\n\r\nvar isLoggedIn = function (patientArea, doctorArea) {\r\n    return function (req, res, next) {\r\n        if (!doctorArea && patientArea) {\r\n            if (isApiAuthenticated(req)) {\r\n                req.authStrategy = 'Header';\r\n                next();\r\n            }\r\n        }\r\n\r\n        if (!patientArea) {\r\n            if (req.isAuthenticated())\r\n                next();\r\n        }\r\n\r\n        if (patientArea && doctorArea) {\r\n            if (!req.isAuthenticated()) {\r\n                var result = isApiAuthenticated(req);\r\n                console.log(result);\r\n                if (isApiAuthenticated(req)) {\r\n                    req.authStrategy = 'Header';\r\n                    console.log('we are there');\r\n                    next();\r\n                } else {\r\n                    console.log('here is an error');\r\n                    return res.send({error: 'Unauthorized'});\r\n                }\r\n            } else {\r\n                next();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports.isLoggedIn = isLoggedIn;\r\n"]}